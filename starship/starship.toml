format = """
$username\
$hostname\
$directory\
$git_branch\
$git_state\
$git_status\
$git_commit\
$git_metrics\
$fill\
$cmd_duration $nodejs $jobs $time $os\
$line_break\
$character"""

# ---

[os]
format = '[$symbol](bold white) '   
disabled = false

[os.symbols]
Windows = ' '
Arch = '󰣇'
Ubuntu = ''
Macos = '󰀵'

[username]
style_user = 'green bold'
style_root = 'black bold'
format = '[$user]($style)'
disabled = false
show_always = true

[hostname]
ssh_only = false
format = '@[$hostname](bold yellow) '
disabled = false

[nodejs]
format = "[$symbol($version )]($style)"

[fill]
symbol = " "

[directory]
truncation_length = 1
truncation_symbol = '…/'
home_symbol = '󰋜 ~'
read_only_style = '197'
read_only = '  '
format = 'at [$path]($style)[$read_only]($read_only_style) '

[character]
success_symbol = "[❯](green)"
error_symbol = "[❯](red)"
vicmd_symbol = "[❮](green)"

[git_branch]
symbol = " "
format = 'via [$symbol$branch]($style)'
# truncation_length = 4
truncation_symbol = '…/'
style = 'bold green'

[jobs]
symbol = ""
style = "bold red"
number_threshold = 1
format = "[$symbol]($style)"

[git_status]
format = '([ \($all_status$ahead_behind\)]($style) )'
# style = 'bold white'
conflicted = '[ confliced=${count}](red) '
up_to_date = '[󰘽 up-to-date](green) '
untracked = '[󰋗 untracked=${count}](red) '
ahead = ' ahead=${count}'
diverged = ' ahead=${ahead_count}  behind=${behind_count}'
behind = ' behind=${count}'
stashed = '[ stashed=${count}](green) '
modified = '[󰛿 modified=${count}](yellow) '
staged = '[󰐗 staged=${count}](green) '
renamed = '[󱍸 renamed=${count}](yellow) '
deleted = '[󰍶 deleted=${count}](red) '

[git_state]
format = '\([$state( $progress_current/$progress_total)]($style)\) '
# style = "bright-black"

[git_commit]
format = '[\($hash$tag\)]($style) '

[git_metrics]
disabled = false

[cmd_duration]
format = "[$duration]($style)"
style = "yellow"

[memory_usage]
symbol = " "

[rust]
symbol = " "

[time]
disabled = false
style = "bold white"
format = "[$time]($style)"

[docker_context]
format = 'via [🐋 $context](blue bold)'

[custom.stunnel]
when = "ps aux | grep stunnel | grep -v grep"
command = "ps -o etime= -p $(ps aux | grep stunnel | grep -v grep | awk '{print $2}')"
style = "red"
format = "[TUNNEL OPEN for $output]($style)"
